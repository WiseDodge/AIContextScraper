Minecraft 1.21.4, the Garden Awakens drop, releases December 3rd. Like with other updates, this drop contains some significant changes affecting mod makers. As always,we ask all players to be patient, and give mod developers time to update to this new version.We kindly ask everyone not to pester them.We also recommend all players make backups of their worlds. Here is a list of several major modder-facing changes in this version. Note that all code references are using Yarn mappings modders using alternative mappings may need to use different names. Fabric changes Developers should use Loom 1.9 at the time of writing to develop mods for Minecraft 1.21.4. Players should install the latest stable version of Fabric Loader currently 0.16.9. Deprecations and removals The following deprecated module was removedfabric-rendering-v0.FabricModelPredicateProviderRegistry, which was previously deprecated, was also removed. BuiltinItemRendererandBuiltinItemRendererRegistryfrom the Rendering v1 module were removed and have been replaced by a transitive access widener toSpecialModelTypes.ID_MAPPER. AttachmentRegistrybuilderwas deprecated in favor ofcreatemethods. The old method is inconvenient, as it requires explicit type parameters. See the Data Attachment Syncing section for an example. BlockPickInteractionAwarewas removed, the new pick item events should be used instead. Breaking change CustomIngredientgetMatchingStacksmust now return a stream, not a list. New Fabric API changes With the help of many contributors, Fabric API has received some new features since the last update blog post Convention Tags Add more tags JT122406, TelepathicGrunt, IThundxr Data Attachments Registration enhancements forgetmenot13579 Data Attachments Sync API Syst3ms Lifecycle Events AddServerChunkEvents.Generatejpenilla Lifecycle Events AddAFTER_CLIENT_WORLD_CHANGEfishshi Transfer API Add support for Item-containing Items BasiqueEvangelist In addition, a longstanding bug that caused language files to not load after overridingassetsminecraftlangen_us.jsonin a dedicated server mod was fixed. Data Attachment Syncing Fabric API can now sync data attachments. To make a syncable attachment, callsyncWithinside the builder. The passed packet codec is used to serialize the attached data. Here is how a thirst attachment would look like The sync predicate AttachmentSyncPredicate controls who gets the synced data. For example, global data can be synced usingall. For more granular control, you can also pass a custom predicate. Pick item events Minecraft 1.21.4 moves the Pick Block functionality from the client to the logical server. As such, the existing client events have been replaced with new, server-side ones. This replacesClientPickBlockApplyCallback,ClientPickBlockCallback, andClientPickBlockGatherCallback. This change also applies to entities EntityPickInteractionAware. The new events arePlayerPickItemEventsBLOCKfor picking a block andPlayerPickItemEventsENTITYfor picking an entitys spawn egg. ReturnItemStack.EMPTYto stop the picking, and returnnullto use the default behavior. requestIncludeDataistrueif the client requests NBT to be included in the returned item stack by holdingCtrlwhile picking block. This parameter is also available to the entity pick item event, even though vanilla does not use this functionality spawn eggs do not include the picked entitys NBT. Note that this only checks if the client is asking NBT data, and does not check game mode or permission level. In vanilla, NBT data is only included for Creative mode players. Client Data Generation Starting with Minecraft 1.21.4, Mojang has moved a number of data generation classes to the client. Loom 1.9 adds a new option that allows you to run your data generation against the client. See the following example if you are using thefabricApiutility to set up data generation If you are using thecreateSourceSetoption, yourdatagensource set will now have access to Minecrafts client-only classes and classes in yourclientsource set. Other than updating the data generators themselves, no other changes will be necessary. If you are using thesplitEnvironmentSourceSetsoption but not thecreateSourceSetoption, you should move yourDataGeneratorEntrypointimplementation from themainsource set to theclientsource set. Model Loading API ModelModifierevents and callbacks have been split there is now one set for static models and one set for block models. This was necessary because static models useUnbakedModeland are baked with settings while block models useGroupableModelwhich no longer extendsUnbakedModel and are not baked with settings. It also allowed cleaning up the identifier getters and providing theBlockStatedirectly toModelModifier.OnLoadBlock. However, allBeforeBakeandAfterBakeevents were removed. This is because their behavior can now be achieved using theOnLoadevents, by wrapping the given model and overriding thebakemethod to replace the unbaked model passed tosuper.baketo replicateBeforeBake or replace the result ofsuper.baketo replicateAfterBake. This is possible because 1.21.4 made it so the parent of aJsonUnbakedModelno longer has to be anotherJsonUnbakedModel. To make this easier, the utility classesWrapperUnbakedModelandWrapperGroupableModelwere added, which forward all method calls to awrapperfield. There were also some minor fundamental issues withBeforeBakeandAfterBakeevents, which prompted their removal. ModelModifier.OnLoadcan now accept anullmodel, which is a model that was requested during resolution but does not have a corresponding JSON file. With this change,ModelResolverwas removed as its behavior could now be achieved withModelModifier.OnLoadwithOVERRIDE_PHASE. DelegatingUnbakedModelwas removed asGroupableModelno longer extendsUnbakedModel, soBlockModelResolvers can no longer use it, which was its original purpose. textureGetterwas removed fromModelModifiercallback contexts as it is now accessible throughBakergetSpriteGetter. FRAPIsWrapperBakedModelwas moved to Model Loading API and was renamed toUnwrappableBakedModelto avoid conflicts with vanillas newWrapperBakedModel.UnwrappableBakedModelis also implemented and interface injected on vanillasWrapperBakedModel. A new staticUnwrappableBakedModelunwrapmethod was added which accepts aPredicatesaying when to stop unwrapping. See the documentation for more details. Minecraft changes Block Models Previously, block entities could choose whether they rendered their block model in addition to any custom block entity rendering. This method has been removed, as now all block entities render their block models While block models were already used to provide particle textures in these cases, mods should still ensure their block entities block models are correct. Item Models Similar to the blockstate definition json files found inassetsnamespaceblockstates, items now utilize new item model definition json files inassetsnamespaceitemsto determine which models to use. These can be quite simple or more complex utilising conditions and other logic to determine which model to use. They also control applying color tints to item textures. These tints can be constant or based on other factors such as potion contents, map colors, etc. As a result of these files being introduced, blocks whose item models previously simply referred to their block model no longer require a separate item model file, as the block model is referred to in the model definition file instead. For example, atassetsmodidmodelsitemmaple_planks.jsoncan be removed, in favor of inassetsmodiditemsmaple_planks.json. Additionally,ItemColorsand related APIs for tinting items have been removed, as item color tints are now controlled by these files. For further information, these jsons are well documented onthe vanilla Minecraft wiki hereand all the ones used by vanilla items can be easily found in the game files. For modders using data generation, these can be generated much like any other JSON asset. Miscellaneous Resource Metadata files now use Codec serializers Equipment assets were moved fromassetsnamespacemodelsequipmenttoassetsnamespaceequipment Theminecrafttall_flowersblock tag was removed Theminecraftflowers,minecrafttall_flowers, andminecrafttrim_templatesitem tags were removed Theminecraftherobrineentity was removed Trim Material jsons no longer specify an item model index, as trimmed items now use separate item models for each material Textures for item outlines shown in empty slots in certain GUIs are now located inassetsnamespacetexturesguispritescontainerslot Yarn changes There have been many changes to Yarn mappings to reflect refactors to the vanilla game, fix issues with the mappings, or to otherwise improve them. Some notable examples include Thenetminecraftdataclientpackage got moved tonetminecraftclientdata, to reflect the classes now being client-only To match this, thenetminecraftdataserverpackage was removed and its contents moved down tonetminecraftdata All references toxpgot changed toexperience BlockStateModelGenerator.TintTypewas changed toBlockStateModelGenerator.CrossType CherryLeavesBlockwas changed toParticleLeavesBlock CherryLeavesParticlewas changed toLeavesParticle LichenGrowerwas changed toMultifaceGrower EntityModelLoaderwas changed toLoadedEntityModels CocoaBeansTreeDecoratorwas changed toCocoaTreeDecorator BakedQuadcolorIndexwas changed totintIndex