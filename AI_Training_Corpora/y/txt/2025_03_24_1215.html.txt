A new version of Minecraft is coming soon with some changes that affect most mod makers. As always,we ask all players to be patient, and give mod developers time to update to this new version.We kindly ask everyone not to pester them.We also recommend all players make backups of their worlds. Here is a list of several major modder-facing changes in this version. Note that all code references are using Yarn mappings modders using alternative mappings may need to use different names. Fabric changes Developers should use Loom 1.10 at the time of writing to develop mods for Minecraft 1.21.5. Players should install the latest stable version of Fabric Loader currently 0.16.10. Loom 1.10 Loom 1.10 requires Gradle 8.12, and comes with performance improvements and enhanced testing setup support. You can checkout the new Loom documentationhere. Deprecations and removals In Content Registries,VillagerInteractionsRegistriesregisterGiftLootTableoverload that takes anIdentifierwas removed. This method was previously deprecated. In Object Builder, two deprecated classes, namelyVillagerProfessionBuilderandVillagerTypeHelper, have been removed. Use theVillagerProfessionconstructor andVillagerTypecreateinstead.TradeOfferHelperrefreshOffers, which had been deprecated and did nothing, was also removed. HudRenderCallbackhas been deprecated in favor of newly addedHudLayerRegistrationCallback. Breaking changes When a mod creates a new dynamic registry, the data pack JSON files for the registry must now be placed inside namespaced directories. For example, if the new registry isexamplepotato_variant, the file for varianttesttinywill be placed indatatestexamplepotato_varianttiny.json. BiomeModificationContextaddSpawnhas a new parameter,weight. This was previously part ofSpawnEntry. TradeOfferHelpernow takes aRegistryKeyof the profession instead ofVillagerProfession. Wandering trader trades must now be added via the builder, which was previously used for the Rebalance experiment. The rebalanced trades are now used in all worlds. New Fabric API changes With the help of many contributors, Fabric API has received some new features since the last update blog post New module Client Game Test API, which can be used to automatically test client rendering and GUI Earthcomputer New module Fabric Tag API, which currently handles tag aliases Juxxel Convention Tags Sync remainingctags with NeoForge TelepathicGrunt Convention Tags Addcflowers,cflowerstall, andcflowerssmallblock and item tags TelepathicGrunt Convention Tags AddTagKeyforctoolswrenchTelepathicGrunt Convention Tags Convention Drink Tags TheDeathlyCow Convention Tags Add Pumpkin Block and Item Tags JT122406 Data Generation Add vararg helper methods for multi-tag support inFabricTagBuilderStarexify Data Generation AddFabricEntityLootTableProviderAntikyth Item API Add a method for overriding modelId in item settings Patbox Item API Addcontainsmethod toFabricComponentMapBuilderTheDeathlyCow Item Group API Change Creative Buttons Texture matthewperiut Item Group API Use page updown to change creative inventory pages modmuss50 Model Loading API Allow retrieving model loading plugins PepperCode1 Networking API AddServerPlayNetworking.reconfiguremodmuss50 Object Builder Allow settingcanPotentiallyExecuteCommandsin builders PepperCode1 Recipe API AddgetAllMatchesandgetAllOfTypemethods toServerRecipeManagerPatbox Registry Sync AddRegistryAttributeOPTIONALthat can be used to not disconnect clients lacking an entire registry note that optional registry values are still unsupported modmuss50 Registry Sync Registry aliasing Syst3ms Rendering AddSpecialBlockRendererRegistryPepperCode1 Rendering Add HUD Render Events kevinthegreat1 Resource Loader Implement builtin mod resourcedata pack sorting Apollo Tag and registry aliases The new tag and registry alias APIs allow for mods to seemlessly migrate their tags and registry aliases to new names. Thanks to Juuxel and Syst3ms respectively for implementing these new APIs. Registry aliases are really simple with the code above, any access to the old ID in the registry is redirected to the new ID. This allows worlds to be upgraded to use the new ID for example, a block with the old ID becomes the one with the new ID. Tag aliases are defined in data packs like tags. For example, a block tag alias group for fences would be located atdatamy_modfabrictag_aliasesblockfences.jsonwith the contents Client GameTest For a long time, Fabric has had an internal client test framework that was used for testing that Fabric API was working correctly on the client. In a series of PRs, Earthcomputer has worked to expand and expose this framework to mod developers. The new experimental API has the following features World creation API, for specifying options used to generate the test world. Screenshot API, with support for comparing against golden images. Input API, to simulate a user interacting with the game. Advanced threading setup, to make the tests more repoducible. Network synchronization, to ensure packets are handled consistently. Herobrine removal, to bring peace to the Kingdom of Tiny Potato. For more information checkout the full documentationhere. HUD Render Events Fabric API 0.116.0 addedHudLayerRegistrationCallbackevent, providing full control over the HUD rendering process. The new API assigns idenftifiers to each layer that can be used to specify where things will be rendered. The new API also allows replacing or removing existing layers. A big thanks to kevinthegreat1 and many other people for making this happen! Minecraft changes NBT Significant changes to NBT handling code have been made. NbtCompoundmethods now returnOptionalinstead of the value. If the key is not in the compound or if the value is not of the correct type, an empty optional is now returned instead of that types default value. For primitives numbers and strings, instead of checking for the existence of a key and handling a fallback, the fallback can now be passed togetmethods Also note thatNbtElementNUMBER_TYPEand type-awarecontainshave been removed. There is no fallback method forgetIntArray,getLongArray, andgetByteArray. UseOptionalorElse. ForgetCompoundandgetListmethods, methods with the previous behavior returning empty objects are provided withOrEmptysuffix. Finally, for those who want to encodedecode codec-based values such asIdentifier stored in aNbtCompoundfield, new methods simplify the process And if there is a codec for the whole object Typed arrays ByteArray,IntArray, andLongArray are no longerLists. They can be converted to a list using.stream.toList, but this is usually not necessary.NbtListcan now contain values of differing types, but this should be a transparent change unless you work with binary data. GameTest In Minecraft25w03a, Mojang totally refactored the vanilla testing framework, exposing it to datapack developers. Unfortunately, the new API is a little bit cumbersome for mod developers. Fabric API now provides its ownGameTestannotation that functions similarly to the old one. The options in the new Fabric-providedGameTestannotation directly map the vanilla data-driven options, removing the need to have a JSON file for each test function. Data driven tests will still work if you wish to use the vanilla system. Miscellaneous DataPoolhas been replaced withPool.